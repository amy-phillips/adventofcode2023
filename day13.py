input = """.#.##.#.##..###
...##...#######
#.####.#.#.###.
#..##..##..#...
###..###....###
.##..##..#.#...
.#....#..######
#..##..########
########.#..#..

.#.###.###..###.#
..#...##########.
..######.#..#.###
..##.#.#......#..
..#.##....##....#
.##..#.##.##.##.#
#.....####..####.
#.....####..####.
.##..#.##.##.##.#

####.####.#
#..#.#..#.#
#..#.####.#
####.#..#.#
.##.##..##.
######..###
#####.##.##
#..########
......##...
.##........
#####....##
######..###
..#.#.##.#.
######..###
.##...##...
#..#.####.#
######..###

.##..#.##
.##.####.
####.....
.##...##.
.##.#.###
#####..##
.##.#.##.
....#.###
####.####
#..###..#
.#..#####
#..#.#...
.....##..
#####.###
#####.###

.##..##.#####
.#.##.#..#..#
##....###.##.
#......###..#
.#.##.#......
...##.....##.
#......#...#.
.#....#......
#......#.####
#.#..#.#..##.
#..##..######

..#..#..#..##..#.
...##...#...##.##
...##...#...##.##
..#..#..#..##..#.
..#..#...##.#####
..#..#..###...###
##.##.##..##...##
#..##..##.#....##
#.....###.#.##..#
...............##
########.#......#

..#.##....##.#.
###.########.##
#...##....##...
#####..##..####
.#..########.##
..##.##..##.##.
.###.######.###
#.##...##...##.
#.##...##...##.

.###.##
####..#
####..#
.###.##
..#..#.
##.....
##..#..
..#..#.
.###.##

#..####
#.#####
...#...
..##...
##....#
##....#
..##...
...#...
#.#####
#..####
.....##

#....#.##
...##.#.#
###..#...
#....#.##
######...
..##.##..
..#...#.#
..#...#.#
..##.##..
######...
#....#.##
###..#...
...##.#.#
#...##.##
#...##.##

##.###..#
##.##.##.
..##..#..
..#..##.#
..#..##.#
..##..#..
##.##.##.
##.###..#
......##.
.#######.
##.#.###.

.#.....
..#####
####..#
...####
##.#..#
#.##..#
.#.#..#
#..####
#.##..#
..##..#
#..####

....#.#
#..#..#
.##..##
.##..##
#..#..#
....#..
.##.#.#
#####..
....##.
####...
.....##
#..##..
.##...#
#..#...
.##...#

..##...#.#.##....
#.####.###.##..##
#.####.###.##..##
..#....#.#.##....
.#..#..#....#.#.#
###..#..##.#####.
##..#..####..#.#.
..###.#..##.#.##.
...##.######.....
..#...##.#.#...#.
....#...###.#....
....#...###.#....
..#...##.#.#...#.

##..##.#.##
##..##.#.##
#######..#.
.####..#...
#.##.#..#.#
.#..#.#....
##..##.#.#.
.####...#..
.####.#.###
..###...###
######..#.#
.####.##.#.
#.##.#.#.##
.####.#####
#######..##

#.##...##
...####.#
####..###
###.###.#
.#.#####.
.#.#####.
###.###.#
####..###
...####.#
#.##...##
#.#.#.###
#..####..
##.####..

..###.....##.
##....##..###
##....#....##
####.....#.#.
...########..
##...#..##.#.
...#.#.###..#
######.##..#.
##....#...#.#
...#####.##.#
#####.#...##.
..#.######...
####.##...##.
###.##..#.#..
###.##.##.#..

##.#...########
.#..##.#.......
.#.#.....#.##.#
.##..#.###.##.#
#.#####.##.##.#
.##.###.#......
.##.###.#......
#.#####.##.##.#
.##..#.###.##.#
.#.#.....#.##.#
.#..##.#.......
##.#...########
###.....###..##
.#.#.#.......#.
####.###..#..#.
##.##.##..####.
#.#..#..#..##..

#.#.....#..#...
.#####.#.##.#.#
.###.##.#..#.##
#.#.###.#..#.##
#.#####.#..#.##
.###.##.#..#.##
.#####.#.##.#.#
#.#.....#..#...
...##.##....##.

#......#.
#.####.##
..####..#
#......#.
#......#.
..####..#
#.####.##
#......#.
########.
..#.##..#
##....##.
.#....#..
.##..##..

######.##.###
..##..#####.#
.#....##.#.##
.####..##..#.
#######.#.###
#######.#.###
.####..##..#.

.##.#..###..####.
.##.#.####..####.
#..#..#..###.#...
#..#####.###.##.#
#..###..##.####..
#####.##...##....
####.#.#..###..##
.##.#..#.#.#...#.
#..#..####.###..#
.##..##....#####.
.##.............#
.....########..##
#..##.##..#.###.#

####.#..#.###
...#..##..#..
..#######.##.
##.#.#..#.#.#
...#.#..#.#..
##.#.#..#.#.#
#####.##.####
##...#..#...#
......##.....
###.#.##.#.##
..###....###.
###...##...##
....######...
...#..##..#..
##.#.####.#.#

.##.#..##.#.#.#..
.##.#.##.########
.....#.####.#####
####....##..###.#
#..#..##..######.
#######.###..#..#
####...#..#.....#
.....##.#...###..
.......##.##...#.
....#....#.#.####
......#..##.#..#.
#..###....#...#.#
#..#...##..##.###
....#...###....##
.##....#..#.#...#
....#....#....#..
....#....#....#.#

..####..#####
#########..##
##.##.####.#.
########..###
##....##.####
...##...#....
..#..#..#.#.#
#.####.#.#.##
##....##.#...
.........##.#
..####...#.#.
...##....#...
###..####.#..

#..#.#..#.#
#.###.##.##
..##.####.#
.#..##..##.
#.##..##..#
.#.########
..#..#..#..
..#..#..#..
.#.########
#.##..##..#
....##..##.
..##.####.#
#.###.##.##
#..#.#..#.#
#.###....##

#...##..##..#
...##..####..
.#.##........
###.#.##..##.
...##.#.##.#.
.....#..##..#
...#.#..##..#
...##.#.##.#.
###.#.##..##.

####.######.#
.#...........
#.#.###..###.
.........#...
#............
#..#.######.#
#..#.######.#

####.###.##
###..#...##
###..#...#.
####.###.##
#..#....#..
###...##.#.
.##.##..#..
#.##.#.##.#
#..##.##.##
..#.###..##
......##.#.
..#.#.###.#
#.##.####.#
..#.#######
..........#
..........#
..#.#######

..#.#..
##..#.#
#...##.
..#.#..
...#.#.
....###
#####..
#####..
....###

..#..#..#.#.##.#.
..##.#..#.#.##.#.
..######.#......#
#....##.####..###
.#....#.##......#
..#.##.....#..#..
.#.###..#.######.

#####.#......
.#.#.....#...
#..##.#...#..
#.#....#.....
#....##..#.#.
##.#.####..##
#..#.#.#.....
#.####..##...
.#....##.##..
..##...#.#.##
##..####.#.##
..#.#...#.#..
..#.#...#.#..

#.##...##..
...#.......
.###.#....#
#.#.#.#..#.
#.##.#....#
##..##.##.#
##..##.##.#
#.##.#....#
#.#.#.#..#.
.###.#....#
...#.......
#.##...##..
..#..#....#
##...#..#.#
.###..####.
##..#.#..#.
##.#.#....#

..##..###
######.##
##...##..
#.##.##..
##..###..
.#..#....
..##..#..

.###.###..##.
.###.###..##.
#.##..#...###
##..#..#...#.
#..##.##..##.
.......#..##.
##.##.##..#.#
.#.##..###.##
.#.##..###.##
##.##.##..#.#
.......#.###.
#..##.##..##.
##..#..#...#.
#.##..#...###
.###.###..##.

.##..#..#..
###.##..##.
###.##..##.
.##........
##.#..##..#
..##..##..#
##.#..##..#

....##..#.#.#.#.#
....##..#.#.#.#.#
######........###
####......###....
.##.##.###..#####
.......#.#..#..#.
####...##.#.##.#.
#####.#..##.##..#
#..#..##.....####
....#..#...###.##
....#....########
.###.#...#####..#
.##.#.##.#.....##

.#.###.#.##.#
........#...#
.#.##......##
.#.##......##
........#...#
.#.###...##.#
#.#.#.#......
####....#.#.#
.#.....####.#
.#.#....####.
.##.#.#...##.
.#.##.##.....
..#...###..#.
###...#..##..
###...#..##..

###..#...
.#.##....
##.##....
###..#...
#...##.##
###......
#....#.##
.########
...####..

...........#..#.#
#..####..##.#..#.
#..####..##.#....
...........#..#.#
..#....#..#..##..
#.#....#.##.#..##
..........#.#....
#.#....#.#..#.#..
.########.#.#.##.
..#.##.#...#...#.
..........#..#.##
#..####..#..#.##.
#.#....#.#.##.#..
##.#..#.#####.##.
#..####..#.##..#.

#.#.#.#..#.
###..######
##.....##..
#.##.##..##
.##..######
..#.#.#..#.
..#.#.#..#.
.##..######
####.##..##
##.....##..
###..######
#.#.#.#..#.
..##..####.

#..#.#.#.
#..#.#.#.
..#.#..#.
.#..#....
..#######
..#######
.#..#.#..
..#.#..#.
#..#.#.#.

##..###...#
#....##.#..
..##..#####
..##..#.#.#
#.##.####..
######....#
.#..#...#.#
#....#.##.#
.#..#....##
.#..#....##
#....#..#.#

...##.##.
..#..##.#
#.###.###
#.###.#.#
.#.#...##
##...#...
##..##.##
##..##.##
##...#...
.#.#...##
#.###.#.#
#.###.###
..#..##.#
....#.##.
....#.##.

#....##.#
#....####
##..##.##
#.##.#..#
#....##..
.#..#..##
#.##.#.##
##...####
#.##.#.##
#.##.#.##
##...####
#.##.#.##
.#..#..##
#....##..
#.##.#..#
##..##.##
#....####

#..#....##.##.#
....##..#..#.#.
....##..#..#.#.
#..#....##.##.#
#.######.#.##.#
#......##.#..##
....###...#####
##...#.#...##..
.#.......##..##
.#.......##..##
##..##.#...##..
....###...#####
#......##.#..##
#.######.#.##.#
#..#....##.##.#

#...##...#..#
#.####.#.####
..#...#..#..#
#...#.#.##..#
#..#..###.##.
...#....#....
.###..#.##..#
..##.#.......
..##.#.......
.###..#..#..#
...#....#....

##..##.#.#.
.#.#.#.###.
####.##.#.#
#######.#.#
.#.#.#.###.
##..##.#.#.
#.....#.#.#
#.....#.#.#
##..##.#.#.
.#.#.#.###.
#######.#.#

......#
.######
.#..#..
.#..#.#
.####.#
......#
##..##.
#....#.
#.##.##
#.##.##
#....#.
##..##.
......#

#.#.######.
.#.##....##
####......#
...#.#..#.#
##...#..#..
.#..######.
#.#..#..#..
..#....#...
.##..####..
#.##.#..#.#
#.###....##
..#........
..#........

.####.####.##
#.##.#....#.#
.####......##
.####..##..##
#....#....#..
..##...##...#
.......##....
.#..#..#...#.
..##........#
.#..#..##..#.
#....##..##..
..##..####..#
.####.#..#.##
......#..#...
##..###..###.

.#..##.#.#.#..#.#
##.#.....#......#
#.#..#.##.##..##.
....#...###.##.##
.......#.##.##.##
.......#.##.##.##
....##..###.##.##
#.#..#.##.##..##.
##.#.....#......#
.#..##.#.#.#..#.#
#...###...#.##.#.
.#.####..#.#..#.#
######...##.##.##

####....#####.#
####....#####.#
#.###..###.###.
#..........##..
#..#.##....#..#
####.##.#######
#..#.##.#..##..
.##......##.#..
###..##..###..#

......##.##
####.##.###
#..#####...
.##.#.#.##.
.##.#.#.##.
#..#####...
####.##.###
.....###.##
#..#...##.#
.##..##.#..
####....#..

#..#..#.###.####.
###.##...##.....#
##.#........#..#.
.....##..###.##.#
..#...#.##..#..#.
.#....#######..##
......##.....##..
#..###.##########
.#..####.###....#
..#..##.#####..##
.##.#.###.#.####.
#.##..#..#.......
.....##..##.#..#.
.###...###..#..#.
.###...###..#..#.

.####..##..####
...###....###..
#.#.##.##.##.#.
....#.#..#.#...
#....######....
#......##......
....#.#..#.#...

......####..###
.#..#.#####.###
#.##.#.........
#.##.###.#..#.#
.####..###..###
######..######.
..##......##...
##########..###
.......#......#
.#..#..##....##
......##.####.#
##..###........
......###....##
.####....####..
#.##.#..#....#.

#####.#
#.##..#
##.#.#.
###..#.
...#.#.
###.###
..#####
..#####
###.###

##.###.
###...#
##.....
..#...#
##.##.#
..#.###
..#..##
......#
......#
..#..##
..#.###
##..#.#
..#...#
##.....
###...#
##.###.
...###.

..##.###.#...##
#.##.###.....##
#.##.###.....##
...#.###.#...##
.#....#...#.#..
..####..#####..
...######.##.##
.#.#..#.#.#####
.#...#..#......
.#...##..######
.#..#.####..#..

#.##.#..#
#.##.#..#
..#.#####
##.##.##.
#.#.##.##
.###.....
...##....

....#..#....###
##.#...##.#.###
###...#....#.##
..##.#...######
######.####.###
.........##....
#.##..######...

....##.
#####.#
....#..
....##.
#..##..
.....#.
#####.#
#####.#
.....#.
#..##..
....###
....#..
#####.#

.##..#..#
#.###.###
.#..##..#
##.####..
.#..##...
......#..
......#..
.#..##...
##.####..
.##.##..#
#.###.###
.##..#..#
....#..##
...###...
.#..###.#
.#..###.#
...###...

.#....#.##...
#......#.#.##
#.####.###...
##########...
.##..##......
.#....#...###
.##..##.##.##
.##.###..##..
########.####
..####..##.##
...##...#..##
.##..##...#..
#.####.#..###
##....###.###
.#....#.###..

#..#####.#..#
###.##.######
#........####
.#.#..#.#....
..........##.
#........#..#
##..##..#####
#..#..#..#..#
#.######.#..#

.#..#.####.#..#
...#...##...#..
#...##....##...
##..##.##.##..#
##..##.##.##..#
#...##....##...
...#...##...#..
.#..#.####.#..#
##.#........#.#
.##.#.####.#.##
###..........##
.##.########.##
.#..##.##.##...
...#.#.##.#.#..
.....#.##.#....
###.#......#.##
#.###.#..#.###.

#..#.#.##
....##.#.
....##.#.
#..#...##
.##.#..##
.....#.##
.##...#.#
#..#....#
....####.

#####..##.#
#.#.#.#.#..
###.##.##..
##.##.#...#
...#..#.##.
...#..#.##.
##.##.....#
###.##.##..
#.#.#.#.#..
#####..##.#
####..#.#.#
####..#.#.#
#####..##.#
#.#.#.#.#..
###.##.##..

##.##.######.
.######.##.##
##.##.######.
..#..#......#
.#..#.#.##.#.
#.#..#.#..#.#
###..########

.#.#.#..##..#.#.#
.###...#..#...###
#..#.#..##..#.#..
.#.#...####...#.#
#.#....#.......#.
#................
...#.#......#.#..
..#.####..####.#.
...#...####...#..
#.#.##..##..##.#.
.....#.####.#....
#.##.#.####.#.##.
.###..#....#..###
.##..########..##
.##..########..##
.###..#....#..###
#.##.#.####.#.##.

#..#.#..#.#
..###.##..#
#..#......#
###.######.
#.##.####.#
#.....##...
#...#....#.
..#..#..#..
#.#........
.###..##..#
.###..##..#
#.#........
..#..#..#..
#...#....#.
#.....##...

..####..##.
#.##.......
###.....##.
.###.#..##.
#...#......
#.###..####
##..#.#####
.#..#.#####
#.###..####

......#####
####.##.##.
####.#.....
######...#.
....###.###
.##.##.####
.##..#.####
....###.###
######...#.
####.#.....
####.##.##.
......#####
#..#.##.###
####.#..#..
#..####.###

..##.##.##..##..#
..#.####.#..#.###
#####..#####..###
.#.##..##.#...#.#
.#.##..##.#...#.#
#####..#####..###
..#.####.#..#.###
..##.##.##..##..#
##..####..##.#..#
#...#..#...#..#..
##..#..##.##.#...

...##..##...#..
##.####.##.#.##
...#.##.#####..
..#.####..#..##
..#########..#.
..#########..#.
..#.####..#..#.
...#.##.#####..
##.####.##.#.##
...##..##...#..
########...###.

####.#####.
...###....#
...#.....##
...#.....##
...###....#
####.#####.
#....##.##.
.....#.#..#
.##..#.....
.##..##....
.....#.#..#
#....##.##.
####.#####.
...###....#
...#.....##

####....##.####
.....##.#..###.
##.##.#####....
##..###......##
#.#..####.#.#.#
##..#.####.#...
##..#.####.#...
#.#..####.#.#.#
##..###......##
##.##.#####....
.....##.#..###.
####....##.####
.#..####.##.###
#.#.####..###.#
#.######..###.#

.#.#..#.#.#.##.#.
.#.#..#.#.####.#.
...#..#.....###.#
####..######.##..
..........#.#..#.
..##..##..#...##.
.###..###.##.#..#
...####...#.#..#.
.#.####.#.###.#..
#.#.##.#.###.#.#.
.#.#..#.#.#..##..

###..###.
###...##.
..##.##.#
.#..####.
#..##.#..
.#.##.#..
.....#.#.
.....#.##
#.#.##.##
#.#.##.##
.....#.##
.....#.#.
.#.##.#..
#..##.#..
.#..####.

..#............#.
..##.###..###.##.
..##.##.##.##.##.
##.#####..#####.#
..##.##....##.##.
.....#..##..#....
###.#.##..##.#.##
##.#.###..###.#.#
...#..##..##..#..
..#.#........#.#.
#######.#########

###.....#.#.##.
..#..##.#.##..#
####.....###.##
..#.....#...#.#
..#.#...#.###.#
##.#..####.#..#
..#.#.#.###..#.
##.##..##..#.#.
##.##.###..#.#.

....#..#.
####....#
.##......
#.##.##.#
#..##..##
#..##..##
#####..##

.#.#.##
####...
###....
..#.#..
..#....
###....
####...
.#.#.##
#.##...
.#.##..
..#..##
#....##
...#.##
.#...##
.###...

###..###..#.#..
.######..##.###
##########...##
..####..##.#...
#.#..#.###.###.
.##..#..#...##.
##.##.##.#..#..
##.##.###..##..
###..####.#.#.#
###..####.#.#.#
##.##.###..##..

#.####.##
.##..##.#
#####.###
..#..#...
##....##.
.######.#
#..##..#.
#.####.##
..#..#..#
...##....
..####...
..#..#..#
..#..#..#
..####...
...##....
..#..#..#
#.####.##

.#.##..#.#.....
..#.###.#####..
..#...#.#.##...
##.##..#.#..###
...#..##.###.#.
..##.#######.##
..##.#######.##
...#..##.###.#.
##.##..#.#..###
..#...#.#.##...
..#.###.#####..

#.#########
.#.#.#..#.#
#.###.....#
##..#.##.#.
.#..#.##.#.
.###.#..#.#
#...#.##.#.
#...##..##.
.#....##...
#.#.#....#.
#.#.#....#.

#..#..#.#
#..#..#.#
..#....#.
##..##.#.
#.#.##.##
.##...##.
##.###...
#.####...
######...
##.###...
.##...##.
#.#.##.##
##..##.#.
..#....#.
#..#..#.#

#....#..#
#.##.#...
##..##...
##..##...
#.##.#..#
#....#..#
.####..#.
.#..#...#
##..#####

#...##...#....##.
..#.##.#..###....
..##..##..##.####
...####.....##..#
#.######.#....###
###.##.####..#..#
##..##..##.##.##.
#........##.#####
...........#.#..#

.#.#..#..#.##
.##.#...#####
.##.#...#####
.#.#..#..####
#..#.....#...
.####.##.#...
..#..###.#...
#.##.##......
########.####
#####..##.###
#....#..#..##
..####...#.##
..#.#.##.#.##
...#.#.#.....
#.#..#.##....
##.#.#.#..#..
#.#####.#.#..

##.##.##.##.#
##.###..###.#
.####.##.####
#####.##.####
##.##.##.#..#
#.#........#.
#.#........#.

####.#.#.#..#
.##.#.##.#..#
.##...###.##.
.##..##.##..#
.....###.#..#
....#.#..####
######..#.##.
......##.....
####.#.#.#..#
.##..##..####
.##....#.....
#####..#.....
#...##..#....
.##..########
.##.#...#####
#..######....
.....##..#..#

###....##
..#.##.#.
..#..#.#.
....##...
##......#
...#..#..
###....##
..######.
..##..##.

##..##.######
.####.#######
.####.##.##.#
.#..#..#.##.#
######.#....#
......#..##..
######.##..##
.#..#...###..
#....#.......
#######.#..#.
..##....#..#.
#....###....#
########.##.#

#..#.##.#..
#..#.##.#..
#..#.#.##..
#.#####.##.
####...####
#..######.#
.##.###..##
#####.#.##.
....###..#.

#..###.#.
...#...##
##...##..
###.###..
##...#.##
...###.##
...#.#.##
##...#.##
###.###..
##...##..
...#...##
#..###.#.
#..###.#.

####.####..##
#.......#...#
#.#......##.#
#..##...#.###
#..##...#.###
#.#......##.#
#.......#...#
####.####..##
#.##..#######
....#..##.##.
..#...#...###
##.####.#####
##..###.#####

###.#.#
##...##
#..##.#
##.#.##
..##...
..#.##.
#####..
#####..
..#.##."""

def parse_inputs(input):
    patterns = []
    current_pattern = []
    for line in input.split('\n'):
        if len(line) == 0:
            # this is a separator line new input coming!
            patterns.append(current_pattern)
            current_pattern = []
            continue
        current_pattern.append(line)
    patterns.append(current_pattern)
    return patterns

def check_line_for_vertical_reflect(line, offset, swaps_required):
    # compare outwards from here
    all_match = True
    for i in range(0, offset+1):
        # gonna fall of end?
        if offset+i+1 >= len(line):
            return all_match,swaps_required
        #print(f"vertical comparing {offset-i} and {offset+i+1}")
        if line[offset-i] != line[offset+i+1]:
            if swaps_required>0:
                swaps_required-=1
            else:
                all_match = False
                break
    return all_match,swaps_required

def check_for_vertical_reflect(pattern):
    width = len(pattern[0])
    for offset in range(0,width-1):
        all_match = True
        swaps_required = 1
        for line in pattern:
            reflect,swaps_required=check_line_for_vertical_reflect(line, offset, swaps_required)
            if not reflect and swaps_required==0:
                all_match = False
                break
        if all_match and swaps_required==0:
            return offset
    return -1

# compare character by character rather than a imple string compare to take into account that we can swap a single character
def check_line_for_horizontal_reflect(linea, lineb, swaps_required):
    all_match = True
    for i in range(0, len(linea)):
        if linea[i] != lineb[i]:
            if swaps_required>0:
                swaps_required-=1
            else:
                all_match = False
                break
    return all_match,swaps_required
        
def check_for_horizontal_reflect(pattern):
    for offset in range(0,len(pattern)-1):   
        all_match = True
        swaps_required = 1
        # compare outwards from here
        for i in range(0, offset+1):
            # gonna fall of end?
            if offset+i+1 >= len(pattern):
                if swaps_required == 0:
                    return offset
                else:
                    return -1 # didn';'t do enough swaps this is the original line!
            reflect,swaps_required=check_line_for_horizontal_reflect(pattern[offset-i], pattern[offset+i+1], swaps_required)
            #print(f"horizontal comparing {offset-i} and {offset+i+1}")
            if not reflect and swaps_required == 0:
                all_match=False
                break
        if all_match and swaps_required == 0:
            return offset
    return -1

total = 0
patterns = parse_inputs(input)
for pattern in patterns:
    left_cols = check_for_vertical_reflect(pattern)
    if left_cols != -1:
        total+=left_cols+1
        print(f"Pattern col {left_cols}")
        continue
    right_cols = check_for_horizontal_reflect(pattern)
    if right_cols != -1:
        total+=(right_cols+1)*100
        print(f"Pattern row {right_cols}")

print(total)
