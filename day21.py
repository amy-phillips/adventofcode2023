input = """...................................................................................................................................
.....#.......##....#...#..##......#.#....#......#...#..####....................#.........#............#..........#.#...............
...#.......#......#...........#........#.#..........#..........................#..#....#.....#.#.......#.#.......#.....#....#......
............#...#..##.#...#..#.#.....................#..................#.......#.#......#..#....#........#.#....#...#.##.....#....
..#......#...#............#.....#..##..................#..................#....#.......#.........#...#..................#..##......
.#.#......#.....#.................#..........#.#.#.#...#............................#.#.....#....................#.....#.........#.
.......#...............#.#.........#....#......................................#.##.##...........#............#...............#....
..#..#....#...#......#....#....#.#....#.##............#...........#............#.....#..#....#....#..#.#..#.........##...#.......#.
..#....#......................#.#..................#.#.......#................................#.......##.......................#...
.....#....#...#.....#.....#..........#..#...#.....#.........#...................#.....#..##..................#...........#....#....
........#.....##..#..#.#...#.#...#............#.#.#.........#.....##.#.......................#......................#.........#..#.
..#......#..........#.......#...#..##.#.......#..#............#....#................#.....#.#.....###.......##.......#.##...#...#..
..#.......#.#......#......##......#..#.#..#..............#..#..#......#...........###..........##.#.......#..#.....#.....#..#......
......#..##.......#..#......#....#.#............#............#..#......###........##..#..#.....#.....#......##.##...........#......
.........#........#.#............#.....##.##.#................#....#...#.###.......#..#.....#...###.#.....#.....#.#...........#....
.#...##..##..............#...........#................#.#............##....#............#................#.#........#..............
..#...............#............##.....##.#............#..##............#.#.............##.......#.......#.#......##..#..#.#........
.#.#....#..#.....#....##..#.......#.......................##.#.##..#..#.................#.....##.#...#.............#.........#.....
....##...............#.#....##..##.......###.........#..................##...............#..#.....#.#...#...#...#...#..............
..#.#..#....#.............#...#..#..................#..#...#......#.#.##..#..#..........#.#....##.#.#....##..#...#......#........#.
............#.#...###................#..............#.............#...#......................#..........#.#...#......#.###..#......
.#..#....#..........#....................................#...#....#....#..#......#............#...#...#...........##...............
.#.##..#...#...................................#.#....#......#..#.................................#.#.#....#.#.#.#..............#..
................#.................#..#........................................................#....#...##...................#......
...#.##...........#..#..#.......#..............#.....#...#..#..#.....#..#...........................##.....#..#.#...............#..
.........#.....#..#..........#...#..............................#.......#..#.....#....#........#......##....#....#..............#..
......................#........#...............##..........#...#..#..#...#........#....#.................#...##.#.....##...........
.....##..........###..........#.................................#...............#..................##...............#.........#....
..#....#..#....#...........#....#........#......#.#..#....#........#........#...#....................#....#..#....#.....#.....#....
.....#.........#..#......#................#......#..........#........................#.................#.#...........#.....##.#.#..
....#...#.............#.#...#............#...###.....................#....#.....#..........#.............#..#.##..#............#...
............##......#..................#.........#.#........#.#...##..##.....###..#........#............#...#...........#.....#....
......#..#............#.#..#...................#....#..#....#.....#....#.......##...##..###.............#...#........#.........#...
.......#........#...#.................#....#.......#......#.###....#....#...#.........##.....#........#.#....................#.....
.##.##...#.#.......#.#.#.................#.####..#...#.##..............#....#............#...#................#......##.....#......
....#.....#...#.......#.#.....................................#.......#.#............#...#...................#....#................
...#...#...#...#.#................#...#..............#.....#.###......#.....#.....#...#......#...............#....#.........#......
...................#..#.............#...........#...#........#......#.#............##........#..................#...#....#....#....
.....#.......#.....##............#.....#........#...#...##..#..#.............#.........#...............................#..#........
......................#.................#.#......#...#.............#.#........#...#....#.#......#.................#...###..##......
.#..............#............#..##....#........#.#.........#....#.#..#..##.#.........................#.......#.##....##.......#....
...#....#..#..#....................#.......#........#.#...................#.....#............#..................#.............#.##.
.........##.....................#.....#.......#...#................#....#.....#...#...#.##.....#......#........#.........#.........
..........................##.................#.#.#...#.......##....#...#..#....#...........#............................#..........
.#...#.....................#......................#......#...........#.##...#.#....#..##..#............#...........................
......##........#.........##...#...###....................#.........#.....#..#................#.........#.............#.......#....
.###.#.#.....#.#.........#...#..##...#.........#..#..#............................#.............#..#.#....#..........#......#......
......#.#.....#.......#............#.....#..........#.............#......#.#..##..#...#......#......#....................#.....#...
.......#.............#...#..#..#.........###.....#....#...#.#.#...##......#.........#......##..#........#....#.........#....#......
...........##............#...#................#......#.....#............#........#.................#.....................##........
......#................##.........#.......#..............##.#.....#.......##...#.............#........#.##.................#.#.....
.......#..........##.............#.....#....##...........##...................#......................#........#................#...
...#........................................#......#......#....#..#......#...........#.....#..##....##......#..#.............#...#.
......#............#..............##...........##......#..........#..........#....#...#....#........#.....#.#................#.....
...#..#...........#.#....###................#.........#...#...#.#.#..#..........#....#.............................#.......#.......
.................##....####............#........#....#............#........#...#..#...........#.......#...#.#...............#......
..........................#......#......#..#..#....#........#...............#.............#........#..#...#..#.#...#.#.............
...##........#..........#.#...................#...#.....#...#.#.#..#............##....#..#...#.#.#..............#..............#...
...........#...........#.##....#...#.#....#......#............#.#..#............#..##......#.#......#............#.#...............
.#........#.............#.#..#.#.......#............#.....#.......................#..........#......#......#....#..................
...........##.#.....##............#..................#.##....#..#........#....#..#...................##...........##..#..........#.
.........#....#....#............#....#...............##..........................#...........#................#.#...#..#...........
........#......#.............#...............#..#.#.#..#...#..###....#............#.......#......#......#......##....###.##........
........#...##..#....##.#.##.#.........#................#..#........#..........#.........#..............#...##.......#.##..........
.........#......#...#.............#..#.#..#.#............#.....#........#............#...#.#.................#......#..#...........
.................................................................S.................................................................
.......##..##........##.#...........#...#...........#...#.#.#..........##.......#.....#.#...#.......................#..............
..................#.............#..#...#..#...#.....#...........#........#........#..#.#...#...#......................##..#.#......
...........#....#.......#..##.#......#..........#...........#.....#.####.##...#..#...............##...#............####............
................#.....#..#....#.........#.......###....#..............#.......#..#..##.........##..#......#.......#................
.........#....#............#.#..#.......#.#..................#...............#.....#.............#..........#......#...............
....................###..........................#...........#.#...#....###.#...............#..#....#..................#.........#.
...........#.......#..........#....#..#.#...............##..........#....#.....#...#...........#........##......#..................
.#..#..................#.##......#......#.#.#.#....#..........#...#...#.................#.......#.#.....#...#......................
...#.................#..#...........#.#......#.............#...................#.#............#......#..#...........#.........##...
...#............#.....#......#.............#......#.......#.#.......#....#.........##...#......#.....##..........#.................
....#.#........#..#........#.#...................#........##...#.......#...#.....#.#...#.#.#.......................................
.....##.................####.##.....#....##.#.#..#..#.....#....#.......#........#..#....#...#..............#.......................
.....................#...#....#...........#..#.........#.......#.......#......#..#....#.#..........#....#....#............#...#....
.........................##..........#......##.#........#.....#....#......##...................#...........#...............#.#.....
..##....................................#..#........#.....#.......#..#...................#........#...........#....................
.................................##............#.......#...........#.......##.##.....##.......#...##.......##.............#........
.#.#..#....#.........#..........#...#....#.#.##............#..#...#...#...#....#...#.#....#..#.........#.....#.........##....#.....
...#...#..#...........#.....##............#.....#........#.#...........##....##.#..#.#..........##.................................
....#...#.#...............................##.#.......#.#......##...#....##.........#.#..........#......##..#.......#...........##..
............#..................#.......#..............#...#.....#..#.........#....#.##.#......#....#...#..#........#.#.....#..#.##.
..##..........##.#..........#..#....#.#.##...............#..#......#...#.#..#.......#......#.#.......##..............#...#.........
................................#.#.#.....#..#.#...#.....#..##..........#...##..#.#.#........#..................#.###......#.......
..#..........................#...........#.#....##.......#..........##....##.........#.............#.##........#...#......#........
.#......#.....................#.........#.#.....#.#.#..#...............#..#......#..............#..#.#.............................
.#.......#.....##....#..........#...#....##.#.##..#..#........#......##..............##..........#.............#..#..#...........#.
...#.....#...#..#.....#..........#...#.....#.........................#.##.#.....................#...........................#......
...........#.........#.#..................#..#..#.............#.........#....#..#..#..#..#........##........#...##....#..........#.
.........#.#.....#..............###.....#....#.##..###......##.#..#.........#.....#.....................................#...#..#...
....#....#.#.#....#...............#.....##...#......#.......#........#.............#.#........#............#...##..#..#............
...##.#.#......#.#...........................#............#...............#.......#.......#...................##...###..#...##.#...
........#.............##...............#..........#......#.....#...##.......#...............#.#.........#.......##.................
.##.#.........#.......#.....#............#.....#...#.................#..#.##....#...#......##.#............##......#...#####..#....
...#.....#...#.......#.##.#.#.........#..#...................##...............#.........................#..#...#.........###.......
..........................#..................#.#...........#....#..........#...........................#................#....#..#..
................#....#......#............#..###..##.......................#......#..#.....#........#.#........#...#...#..#.......#.
..............#.....##....#.#..#........#....#......#....................#.........#...............#............#..............#...
.......#..##.........#.........#................#........................#......#..................#..##.#....##..........#........
..#.....#...............#....................#.#..#..##....#...........#.....#.....#................#......##..#......#..#.......#.
...#....##............#...#.................#.#.................................#.#....#............##.....#.................#..#..
..........#..........#....##.................##...............#..........#......#.....#............#..#.##.....#....##.............
....................##................................#..#.....#....#.....#.....#..............#..#.............#..................
.......................#...........#.................#.#...................#...##..............##....#......#...............#....#.
..........##.....#...#...##..#.#....#..#..........#..........#....#..#.....#..#............#......#.#......#...#..#.#.#......#.....
.....#............##...#....#.#..#.#....#.............###.........#..#......#.............#......#....#.........#........#.#.###...
....#....##.##..#.#......#.##............#.........#...#...#.........#.....#.#..................#.................#.......#........
......#.....#.......#.......#.......#..#...............#....##..#.....#.......................#......#............##.....#.....#...
.#.........#...#....................#.#.....................#......#......#............#.#.........#............#........#...#..##.
..#.#.#...........#....##..#...#..............................#...............#........#....#.##.......#..........#....#...........
.................#...##...............#...#..#.........................#.#...............#.##....................#.#....#..........
............##.#.......#...................##..........##.......#.#.......................#.............#..#....###.....#..........
...............#..#....#..............#....###..................#.##.................#.#...#...##.#.#..#................#......##..
....#......#.#.#.....#..##.#.##.......###......#.............##...................#...#.......#....#..#.........#..................
..#..........#.....#...#.................................#...........#...#..................#..........##....#..#..#...#.##........
............###................#.#..#......##.................##.....##............#..................#.....##..#..................
.........#..#...........#..............#.......#................#...###.......................#.##....#......#.##.##...............
...##...###..........#..##.................#......##.........#....................#..#......#....#........#..#......##.............
........##.........#.........#..#.....#.#..........#.................#..............#....#....#....#..#...#.#..#...........#.......
..#..#.#.....#........##...##.........#...........................#.........#.....#.........#......#.......#..#...####.........#...
......#......#...............#....#..#..#....#....#...............................#....#.........#...#..#.#...#..##...#........#...
..#.##...##.....#.#......#...#..#...........#..........#......................#.#.....#.......#..........##..##.......#............
.......#......#..................#....#.#................#...............#...........##...........................#.#........#.....
............##....................#..........#.........#................#....#..#..#.....#......#....#.........##..#.........#.....
.............###..#.##..#...........................#...#.....................#...........#.....###.......#....#..........##.....#.
.#..#...#.#.#....#.###...##........#.....#........#.....#.....................#.#..#.#......##...........#..#......#........#......
..................................................................................................................................."""

type MapTile = tuple[int,int]
type LocationInMapTile = tuple[int,int]

type Location = tuple[LocationInMapTile, MapTile] # location is x,y then maptilex, maptiley (might be nicer as classes!)
type Garden = dict[Location,str]

import cProfile
import unittest

def parse_map(input: str):
    garden_map: dict[LocationInMapTile,character] = {}
    start_position: Location
    for line_idx,line in enumerate(input.split('\n')):
        for row_idx,character in enumerate(line):
            garden_map[(row_idx,line_idx)]=character
            if character == 'S':
                start_position = ((row_idx,line_idx),(0,0))
    return garden_map, start_position, (row_idx+1,line_idx+1)

def try_position(position:Location, garden_map: Garden, extents:tuple[int,int]):
    # if fell off edge - wrap to a new tile
    if position[0][0] < 0:
        position = ((position[0][0]+extents[0],position[0][1]),(position[1][0]-1, position[1][1]))
    elif position[0][0] >= extents[0]:
        position = ((position[0][0]-extents[0],position[0][1]),(position[1][0]+1, position[1][1]))
    if position[0][1] < 0:
        position = ((position[0][0],position[0][1]+extents[1]),(position[1][0], position[1][1]-1))
    elif position[0][1] >= extents[1]:
        position = ((position[0][0],position[0][1]-extents[1]),(position[1][0], position[1][1]+1))

    in_tile_position = position[0]

    if garden_map[in_tile_position] == '.':
        return position # can move here
    if garden_map[in_tile_position] == 'S':
        return position # can move here
    return None # no - can't move here!

def take_step(position: Location, garden_map: Garden, extents: tuple[int,int]):
    positions = []
    possible_position = try_position(((position[0][0]-1,position[0][1]),position[1]), garden_map, extents)
    if possible_position is not None:
        positions.append(possible_position)
    possible_position = try_position(((position[0][0]+1,position[0][1]),position[1]), garden_map, extents)
    if possible_position is not None:
        positions.append(possible_position)
    possible_position = try_position(((position[0][0],position[0][1]-1),position[1]), garden_map, extents)
    if possible_position is not None:
        positions.append(possible_position)
    possible_position = try_position(((position[0][0],position[0][1]+1),position[1]), garden_map, extents)
    if possible_position is not None:
        positions.append(possible_position)
    return positions

def debug_print(positions: list[Location], garden_map: Garden, extents: tuple[int,int]):
    for y in range(0,extents[1]):
        for x in range(0,extents[0]):
            if (x,y) in positions:
                print("O",end="")
            else:
                print(f"{garden_map[(x,y)]}",end="")
        print("") # newline
    print("") # newline

def run(step_count:int):
    garden_map, starting_position, extents = parse_map(input)

    positions: dict[MapTile,set[Location]] = {}
    positions[(0,0)] = {starting_position}
    next_positions: dict[MapTile,list[Location]] = {}
    for i in range(0,step_count):
        # split positions into tiles for caching
        for map_tile, map_tile_positions in positions.items():
            
            for position in map_tile_positions:
                stepped_positions = take_step(position, garden_map, extents)
                # some of these need to move to their own lists!
                for pos in stepped_positions:
                    if not pos[1] in next_positions:
                        next_positions[pos[1]] = set()
                    next_positions[pos[1]].add(pos)

        positions,next_positions = next_positions,positions # swap lists

    #debug_print(positions, garden_map, extents)
    total=0
    for positions_in_tile in positions.values():
        #print(len(positions_in_tile))
        total+=len(positions_in_tile)
    print(total)
    return total

class TestSmallerRuns(unittest.TestCase):

    def test_6_steps(self):
        plot_count = run(6)
        self.assertEqual(plot_count, 16)

    def test_10_steps(self):
        plot_count = run(10)
        self.assertEqual(plot_count, 50)
   
    def test_50_steps(self):
        plot_count = run(50)
        self.assertEqual(plot_count, 1594)

    def test_100_steps(self):
        plot_count = run(100)
        self.assertEqual(plot_count, 6536)

    def test_500_steps(self):
        plot_count = run(500)
        self.assertEqual(plot_count, 167004)

    #def test_1000_steps(self):
    #    plot_count = run(1000)
    #    self.assertEqual(plot_count, 668697)

    #def test_5000_steps(self):
    #    plot_count = run(5000)
    #    self.assertEqual(plot_count, 16733044)

def evaluate_quadratic_equation(points, x):
    # Fit a quadratic polynomial (degree=2) through the points
    coefficients = np.polyfit(*zip(*points), 2)

    # Evaluate the quadratic equation at the given x value
    result = np.polyval(coefficients, x)
    return result

import numpy as np

if __name__ == '__main__':
    #unittest.main()

    points = [(i, run(65 + i * 131)) for i in range(3)]

    res = evaluate_quadratic_equation(points, 202300)  
    print(res)

    #run(65)
    #run(65+131)
    #run(65+131*2)
    #run(65+131*3)

    #26501365-65=26501300
    #26501300/131 = 202300


    #11457.5 xsq + 11441.5 x +2722

    #for i in range(1,1000):
    #    print(f"{i}: ", end="")
    #    run(i)
   
    #cProfile.run("run(500)")